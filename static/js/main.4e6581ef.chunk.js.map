{"version":3,"sources":["Components/Quote/Quote.js","Components/Author/Author.js","logo.png","App.js","reportWebVitals.js","index.js"],"names":["Quote","quotation","class","Author","writer","arr","App","props","getRandomColor","color","i","Math","floor","random","randomElement","setState","index","length","state","toString","className","id","style","transition","background","this","href","target","rel","alt","src","logo","Button","outline","size","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAgBeA,G,MAZD,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACZ,OACI,6BAAYC,MAAM,eAAlB,UACI,uCACA,mBAAGA,MAAM,gBAAT,SAA0BD,SCMvBE,G,MAXA,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACb,OACI,4BAAYF,MAAM,2BAAlB,SACI,wBAAQA,MAAM,2BAAd,SACKE,QCPF,G,MAAA,IAA0B,kC,QCOnCC,EAAM,CACV,CAAC,qEAAsE,iBACvE,CAAC,yDAA0D,mBAC3D,CAAC,4GAA6G,gBAC9G,CAAC,oEAAqE,wBACtE,CAAE,kDAA8C,iBAChD,CAAC,sDAAuD,aACxD,CAAC,sEAAyE,gBAsD7DC,E,kDAlDb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAORC,eAAiB,WAGf,IAFA,IACIC,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAHc,mBAGGE,KAAKC,MAAsB,GAAhBD,KAAKE,WAEnC,OAAOJ,GAdS,EAgBlBK,cAAgB,WACd,EAAKC,SAAS,CACZC,MAAO,CAACL,KAAKC,MAAMD,KAAKE,SAAWR,EAAIY,SACvCR,MAAO,EAAKD,oBAjBd,EAAKU,MAAM,CACTF,MAAQ,CAACL,KAAKC,MAAMD,KAAKE,SAAWR,EAAIY,SACxCR,MAAQ,MAAQ,GAAG,IAAIE,KAAKE,SAAW,GAAGM,SAAS,KAJrC,E,qDAwBhB,OACE,qBAAKC,UAAU,MAAMC,GAAG,YAAYC,MAAO,CAACC,WAAY,qBAAsBC,WAAYC,KAAKP,MAAMT,OAArG,SAEE,sBAAKW,UAAU,OAAf,UACE,cAAC,EAAD,CAAOC,GAAG,OACVpB,UAAWI,EAAIoB,KAAKP,MAAMF,OAAO,KAGjC,cAAC,EAAD,CAAQK,GAAG,SAASD,UAAU,SAC9BhB,OAAQC,EAAIoB,KAAKP,MAAMF,OAAO,KAG9B,sBAAKI,UAAU,YAAf,UACE,mBAAGC,GAAG,cAAcK,KAAK,mCAAmCC,OAAO,SAASC,IAAI,aAAhF,SACE,qBAAKC,IAAI,UAAUT,UAAU,OAAOU,IAAKC,MAG3C,cAACC,EAAA,EAAD,CAAQC,SAAO,EAACxB,MAAM,UAAUyB,KAAK,KAAKb,GAAG,YAAYc,QAASV,KAAKX,cAAeM,UAAU,cAAhG,qC,GA1CMgB,aCLHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4e6581ef.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Quote.css'\r\n\r\n\r\nconst Quote = ({quotation}) => {\r\n    return (\r\n        <blockquote class='disp spacing'>\r\n            <i>&#8220;</i>\r\n            <p class=\"quote spacing\">{quotation}</p>\r\n            {/* <footer class=\"blockquote-footer text-right\">\r\n            Someone famous in <cite title=\"Source Title\">Source Title</cite>\r\n            </footer> */}\r\n         </blockquote>\r\n    )\r\n}\r\n\r\nexport default Quote;","import React from 'react';\r\nimport './Author.css'\r\n\r\nconst Author = ({writer}) => {\r\n    return (\r\n        <blockquote class='blockquote w-100 spacing'>\r\n            <footer class=\"author blockquote-footer\">\r\n                {writer} \r\n                {/*in <cite title=\"Source Title\">Source Title</cite> */}\r\n            </footer>\r\n        </blockquote>\r\n    )\r\n}\r\n\r\nexport default Author;","export default __webpack_public_path__ + \"static/media/logo.57573394.png\";","import React, { Component } from 'react';\nimport Quote from './Components/Quote/Quote';\nimport Author from './Components/Author/Author';\nimport './App.css';\nimport logo from './logo.png';\nimport { Button } from 'reactstrap';\n\nconst arr = [\n  ['Whatever the mind of man can conceive and believe, it can achieve.', 'Napoleon Hill'],\n  ['Strive not to be a success, but rather to be of value.', 'Albert Einstein'],\n  [' Two roads diverged in a wood, and I took the one less traveled by, And that has made all the difference.', 'Robert Frost'],\n  [' I attribute my success to this: I never gave or took any excuse.', 'Florence Nightingale'],\n  [ 'You miss 100% of the shots you donâ€™t take.', 'Wayne Gretzky'],\n  ['Every strike brings me closer to the next home run.', 'Babe Ruth'],\n  [' Life isn\\'t about getting and having, it\\'s about giving and being. ', 'Kevin Kruse']\n];\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      index:  [Math.floor(Math.random() * arr.length)],\n      color:  \"#\" + ((1<<24)*Math.random() | 0).toString(16)\n    }\n  }\n  // methods using state\n  getRandomColor = () => {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n  randomElement = () => {\n    this.setState({\n      index: [Math.floor(Math.random() * arr.length)],\n      color: this.getRandomColor()\n    })\n  };\n  render() {\n    // minimum variables\n    return (\n      <div className=\"App\" id='quote-box' style={{transition: \"background 2s ease\", background: this.state.color}}>\n        {/* we display the quote here */}\n        <div className='Post'>\n          <Quote id='text'\n          quotation={arr[this.state.index][0] } \n          />\n          {/* and we display the author here */}\n          <Author id='author' className='author'\n          writer={arr[this.state.index][1]} \n          />\n          {/* we add interactive buttons/links */}\n          <div className=\"Rectangle\">\n            <a id='tweet-quote' href='https://twitter.com/intent/tweet' target='_blank' rel=\"noreferrer\">\n              <img alt='twitter' className='logo' src={logo}></img>\n            </a>\n            {/* {console.log(this.state.index, this.state.color)} */}\n            <Button outline color='primary' size=\"sm\" id='new-quote' onClick={this.randomElement} className=\"btn-primary\" > New Quote </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}